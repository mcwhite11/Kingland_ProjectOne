@{
    	//shift value
	function shiftValue($num, $shift) {
		$final = 0;
		$x = 1;
		$iteration = 0;
		//While our number hasn't been depleted
		while ( $num > 0 ) {
			$iteration++;
		
			//Grab the smallest digit
			$val = $num % 10;
			
			//Subtract it from our number
			$num -= $val;
			
			//Caesar Cypher Shift the value by some number
			$val = ($shift + $val) * $x;
			
			//Reset value so 14 = 4, not 14 and ect.
			if ( ($val / $x) > 9 ) {
				$val -= 10 * $x;
			}
			
			//Add this shifted number to our final number
			$final += $val; 
			
			//Move to next position
			$x *= 10;
			$num = $num / 10;
			
			//Modify next shift
			if ( $iteration % 2 == 0 ) {
				$shift *= 2;
			} else {
				$shift /= 2;
			}
		}
		
		return $final;
	}
	
	//unshift value
	function unshiftValue($num, $shift) {
		$final = 0;
		$x = 1;
		$iteration = 0;
		//While our number hasn't been depleted
		while ( $num > 0 ) {
			$iteration++;
			//Grab the smallest digit
			$val = $num % 10;
			
			//Subtract it from our number
			$num -= $val;
			
			//Caesar Cypher Shift the value by some number
			$val = ($val - $shift) * $x;
			
			//Reset value so 14 = 4, not 14 and ect.
			if ( ($val / $x) < 0 ) {
				$val += 10 * $x;
			}
			
			//Add this shifted number to our final number
			$final += $val; 
			
			//Move to next position
			$x *= 10;
			$num = $num / 10;
			
			//Modify next shift
			if ( $iteration % 2 == 0 ) {
				$shift *= 2;
			} else {
				$shift /= 2;
			}
		}
		
		return $final;
	}
}