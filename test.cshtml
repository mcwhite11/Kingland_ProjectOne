@using System;
@using System.Data;
@using System.DirectoryServices;
@using System.Security.Principal;
@using System.DirectoryServices.AccountManagement;
@using System.Collections;
@using WebMatrix.Data;

@{
        //Make sure it's capitilazed like in GP
        string EMPLOYID = Request.Params["user"].ToUpper();

        //Connect to DB and Open
        var gp = Database.Open("GP");

        //Now get their first/last name/location
        var loc = gp.QuerySingle("SELECT LOCATNID, NICKNAME FROM UPR00100 WHERE EMPLOYID = @0", EMPLOYID);
        
        //Determine location
        string location = loc.LOCATNID.Trim();

        //Convert from GP to AD terms
        if ( location == "AM" ) {
            location = "Ames";
        } else if ( location == "CL" ) {
            location = "Clear Lake";
        } else if ( location == "DA" ) {
            location = "China";
        } else if ( location == "RO" ) {
            location = "Clear Lake";
        } else if ( location == "LM" ) {
            location = "Lake Mills";
        }

        <text>@EMPLOYID : @location : @loc.NICKNAME</text>

        //Create a search context/specific location for this search
        PrincipalContext ad = new PrincipalContext(ContextType.Domain, "10.1.40.50", "ou=" + @location + ", DC=KINGLAND, DC=CC");
    
        //Returns a "user principal" in that DN?
        UserPrincipal u = new UserPrincipal(ad);

        //Search filter - For filters reference http://msdn.microsoft.com/en-us/library/system.directoryservices.accountmanagement.userprincipal_properties(v=vs.110).aspx
        u.SamAccountName = EMPLOYID;

        //"Search Engine Object" of sorts, based on filters specified above
        PrincipalSearcher search = new PrincipalSearcher(u); 

        //Returns essentially a user object based on that filter
        UserPrincipal result =  (UserPrincipal) search.FindOne();

        //Now we go underneath to the LDAP level to grab all attributes not covered by User Principal (i.e, Display name, ect.)
        DirectoryEntry lowerLdap = (DirectoryEntry)result.GetUnderlyingObject();

        //Grab the attributes of that user for printing or manipulation
        //To find these, go in Active Directory controls and find a user -- then find the "Attribute Editor" which will tell you the attribute's names to be used below
        string test = (string) lowerLdap.Properties["mail"].Value;
        
        <text> : @test</text>
}